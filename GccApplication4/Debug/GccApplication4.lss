
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000664  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  00800100  00800100  00000664  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000694  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000006d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001183  00000000  00000000  00000750  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aaf  00000000  00000000  000018d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006f1  00000000  00000000  00002382  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00002a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000054e  00000000  00000000  00002b74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e2  00000000  00000000  000030c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000036a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ef       	ldi	r30, 0xF0	; 240
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 33       	cpi	r26, 0x32	; 50
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0a d0       	rcall	.+20     	; 0xd8 <main>
  c4:	93 c2       	rjmp	.+1318   	; 0x5ec <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <SPI_MasterInit>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	8d e7       	ldi	r24, 0x7D	; 125
  ca:	8d b9       	out	0x0d, r24	; 13
  cc:	88 e2       	ldi	r24, 0x28	; 40
  ce:	87 bb       	out	0x17, r24	; 23
  d0:	bc 98       	cbi	0x17, 4	; 23
  d2:	81 e5       	ldi	r24, 0x51	; 81
  d4:	8d b9       	out	0x0d, r24	; 13
  d6:	08 95       	ret

000000d8 <main>:
	
}
int main()
{
	       
			DDRD=0xFF;
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	81 bb       	out	0x11, r24	; 17
			PORTD=0x00;
  dc:	12 ba       	out	0x12, r1	; 18
			SPI_MasterInit();
  de:	f4 df       	rcall	.-24     	; 0xc8 <SPI_MasterInit>
			while(1)
			{
				scan_PS2();
				_delay_us(500);
				
				x=~data_array[3];
  e0:	0f 2e       	mov	r0, r31
  e2:	f5 e1       	ldi	r31, 0x15	; 21
  e4:	ef 2e       	mov	r14, r31
  e6:	f1 e0       	ldi	r31, 0x01	; 1
  e8:	ff 2e       	mov	r15, r31
  ea:	f0 2d       	mov	r31, r0
				y=~data_array[4];
				j=~data_array[5];
				b=~data_array[6];
				c=~data_array[7];
				d=~data_array[8];
				z=d*sqrt(1-((c*c)/2));
  ec:	cc 24       	eor	r12, r12
  ee:	c3 94       	inc	r12
			DDRD=0xFF;
			PORTD=0x00;
			SPI_MasterInit();
			while(1)
			{
				scan_PS2();
  f0:	d1 2c       	mov	r13, r1
  f2:	f6 d0       	rcall	.+492    	; 0x2e0 <scan_PS2>
  f4:	87 ee       	ldi	r24, 0xE7	; 231
  f6:	93 e0       	ldi	r25, 0x03	; 3
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x20>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x26>
  fe:	00 00       	nop
				_delay_us(500);
				
				x=~data_array[3];
 100:	f7 01       	movw	r30, r14
 102:	83 81       	ldd	r24, Z+3	; 0x03
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	80 95       	com	r24
 108:	90 95       	com	r25
 10a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <x+0x1>
 10e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <x>
				y=~data_array[4];
 112:	84 81       	ldd	r24, Z+4	; 0x04
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	80 95       	com	r24
 118:	90 95       	com	r25
 11a:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <y+0x1>
 11e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <y>
				j=~data_array[5];
 122:	c5 81       	ldd	r28, Z+5	; 0x05
 124:	d0 e0       	ldi	r29, 0x00	; 0
 126:	c0 95       	com	r28
 128:	d0 95       	com	r29
 12a:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <j+0x1>
 12e:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <j>
				b=~data_array[6];
 132:	66 80       	ldd	r6, Z+6	; 0x06
 134:	71 2c       	mov	r7, r1
 136:	60 94       	com	r6
 138:	70 94       	com	r7
 13a:	70 92 01 01 	sts	0x0101, r7	; 0x800101 <__data_end+0x1>
 13e:	60 92 00 01 	sts	0x0100, r6	; 0x800100 <__data_end>
				c=~data_array[7];
 142:	a7 80       	ldd	r10, Z+7	; 0x07
 144:	b1 2c       	mov	r11, r1
 146:	a0 94       	com	r10
 148:	b0 94       	com	r11
 14a:	b0 92 2d 01 	sts	0x012D, r11	; 0x80012d <c+0x1>
 14e:	a0 92 2c 01 	sts	0x012C, r10	; 0x80012c <c>
				d=~data_array[8];
 152:	00 85       	ldd	r16, Z+8	; 0x08
 154:	10 e0       	ldi	r17, 0x00	; 0
 156:	00 95       	com	r16
 158:	10 95       	com	r17
 15a:	10 93 31 01 	sts	0x0131, r17	; 0x800131 <d+0x1>
 15e:	00 93 30 01 	sts	0x0130, r16	; 0x800130 <d>
				z=d*sqrt(1-((c*c)/2));
 162:	aa 9c       	mul	r10, r10
 164:	c0 01       	movw	r24, r0
 166:	ab 9c       	mul	r10, r11
 168:	90 0d       	add	r25, r0
 16a:	90 0d       	add	r25, r0
 16c:	11 24       	eor	r1, r1
 16e:	99 23       	and	r25, r25
 170:	04 f4       	brge	.+0      	; 0x172 <main+0x9a>
 172:	aa 9c       	mul	r10, r10
 174:	c0 01       	movw	r24, r0
 176:	ab 9c       	mul	r10, r11
 178:	90 0d       	add	r25, r0
 17a:	90 0d       	add	r25, r0
 17c:	11 24       	eor	r1, r1
 17e:	99 23       	and	r25, r25
 180:	0c f4       	brge	.+2      	; 0x184 <main+0xac>
 182:	01 96       	adiw	r24, 0x01	; 1
 184:	95 95       	asr	r25
 186:	87 95       	ror	r24
 188:	b6 01       	movw	r22, r12
 18a:	68 1b       	sub	r22, r24
 18c:	79 0b       	sbc	r23, r25
 18e:	07 2e       	mov	r0, r23
 190:	00 0c       	add	r0, r0
 192:	88 0b       	sbc	r24, r24
 194:	99 0b       	sbc	r25, r25
 196:	e4 d0       	rcall	.+456    	; 0x360 <__floatsisf>
 198:	ae d1       	rcall	.+860    	; 0x4f6 <sqrt>
 19a:	4b 01       	movw	r8, r22
 19c:	5c 01       	movw	r10, r24
 19e:	b8 01       	movw	r22, r16
 1a0:	11 0f       	add	r17, r17
 1a2:	88 0b       	sbc	r24, r24
 1a4:	99 0b       	sbc	r25, r25
 1a6:	dc d0       	rcall	.+440    	; 0x360 <__floatsisf>
 1a8:	a5 01       	movw	r20, r10
 1aa:	94 01       	movw	r18, r8
 1ac:	3d d1       	rcall	.+634    	; 0x428 <__mulsf3>
 1ae:	a5 d0       	rcall	.+330    	; 0x2fa <__fixsfsi>
 1b0:	8b 01       	movw	r16, r22
 1b2:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <z+0x1>
 1b6:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <z>
				w=b*sqrt(1-((j*j)/2));
 1ba:	cc 9f       	mul	r28, r28
 1bc:	c0 01       	movw	r24, r0
 1be:	cd 9f       	mul	r28, r29
 1c0:	90 0d       	add	r25, r0
 1c2:	90 0d       	add	r25, r0
 1c4:	11 24       	eor	r1, r1
 1c6:	99 23       	and	r25, r25
 1c8:	04 f4       	brge	.+0      	; 0x1ca <main+0xf2>
 1ca:	cc 9f       	mul	r28, r28
 1cc:	c0 01       	movw	r24, r0
 1ce:	cd 9f       	mul	r28, r29
 1d0:	90 0d       	add	r25, r0
 1d2:	90 0d       	add	r25, r0
 1d4:	11 24       	eor	r1, r1
 1d6:	99 23       	and	r25, r25
 1d8:	0c f4       	brge	.+2      	; 0x1dc <main+0x104>
 1da:	01 96       	adiw	r24, 0x01	; 1
 1dc:	95 95       	asr	r25
 1de:	87 95       	ror	r24
 1e0:	b6 01       	movw	r22, r12
 1e2:	68 1b       	sub	r22, r24
 1e4:	79 0b       	sbc	r23, r25
 1e6:	07 2e       	mov	r0, r23
 1e8:	00 0c       	add	r0, r0
 1ea:	88 0b       	sbc	r24, r24
 1ec:	99 0b       	sbc	r25, r25
 1ee:	b8 d0       	rcall	.+368    	; 0x360 <__floatsisf>
 1f0:	82 d1       	rcall	.+772    	; 0x4f6 <sqrt>
 1f2:	4b 01       	movw	r8, r22
 1f4:	5c 01       	movw	r10, r24
 1f6:	b3 01       	movw	r22, r6
 1f8:	77 0c       	add	r7, r7
 1fa:	88 0b       	sbc	r24, r24
 1fc:	99 0b       	sbc	r25, r25
 1fe:	b0 d0       	rcall	.+352    	; 0x360 <__floatsisf>
 200:	a5 01       	movw	r20, r10
 202:	94 01       	movw	r18, r8
 204:	11 d1       	rcall	.+546    	; 0x428 <__mulsf3>
 206:	79 d0       	rcall	.+242    	; 0x2fa <__fixsfsi>
 208:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <w+0x1>
 20c:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <w>


								
				if(z<127)
 210:	0f 37       	cpi	r16, 0x7F	; 127
 212:	11 05       	cpc	r17, r1
 214:	2c f4       	brge	.+10     	; 0x220 <main+0x148>
				{
					
					PORTD|=(1<<PIND0);
 216:	90 9a       	sbi	0x12, 0	; 18
					PORTD&=~(1<<PIND1);
 218:	91 98       	cbi	0x12, 1	; 18
					PORTD|=(1<<PIND2);
 21a:	92 9a       	sbi	0x12, 2	; 18
					PORTD&=~(1<<PIND3);
 21c:	93 98       	cbi	0x12, 3	; 18
 21e:	0f c0       	rjmp	.+30     	; 0x23e <main+0x166>
				}
				else if (z>127)
 220:	00 38       	cpi	r16, 0x80	; 128
 222:	11 05       	cpc	r17, r1
 224:	2c f0       	brlt	.+10     	; 0x230 <main+0x158>
				{
					PORTD|=(1<<PIND1);
 226:	91 9a       	sbi	0x12, 1	; 18
					PORTD&=~(1<<PIND0);
 228:	90 98       	cbi	0x12, 0	; 18
					PORTD|=(1<<PIND3);
 22a:	93 9a       	sbi	0x12, 3	; 18
					PORTD&=~(1<<PIND2);
 22c:	92 98       	cbi	0x12, 2	; 18
 22e:	07 c0       	rjmp	.+14     	; 0x23e <main+0x166>
				}
				else if (z==127)
 230:	0f 37       	cpi	r16, 0x7F	; 127
 232:	11 05       	cpc	r17, r1
 234:	21 f4       	brne	.+8      	; 0x23e <main+0x166>
				{
					
					PORTD&=~(1<<PIND0);
 236:	90 98       	cbi	0x12, 0	; 18
					PORTD&=~(1<<PIND1);
 238:	91 98       	cbi	0x12, 1	; 18
					PORTD&=~(1<<PIND2);
 23a:	92 98       	cbi	0x12, 2	; 18
					PORTD&=~(1<<PIND3);
 23c:	93 98       	cbi	0x12, 3	; 18
					
					
				}
				
				if(w<127)
 23e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <w>
 242:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <w+0x1>
 246:	8f 37       	cpi	r24, 0x7F	; 127
 248:	91 05       	cpc	r25, r1
 24a:	2c f4       	brge	.+10     	; 0x256 <main+0x17e>
				{
					
					PORTD|=(1<<PIND4);
 24c:	94 9a       	sbi	0x12, 4	; 18
					PORTD&=~(1<<PIND5);
 24e:	95 98       	cbi	0x12, 5	; 18
					PORTD|=(1<<PIND6);
 250:	96 9a       	sbi	0x12, 6	; 18
					PORTD&=~(1<<PIND7);
 252:	97 98       	cbi	0x12, 7	; 18
 254:	0f c0       	rjmp	.+30     	; 0x274 <main+0x19c>
				}
				else if (w>127)
 256:	80 38       	cpi	r24, 0x80	; 128
 258:	91 05       	cpc	r25, r1
 25a:	2c f0       	brlt	.+10     	; 0x266 <main+0x18e>
				{
					
					PORTD|=(1<<PIND5);
 25c:	95 9a       	sbi	0x12, 5	; 18
					PORTD&=~(1<<PIND4);
 25e:	94 98       	cbi	0x12, 4	; 18
					PORTD|=(1<<PIND7);
 260:	97 9a       	sbi	0x12, 7	; 18
					PORTD&=~(1<<PIND6);
 262:	96 98       	cbi	0x12, 6	; 18
 264:	07 c0       	rjmp	.+14     	; 0x274 <main+0x19c>
				}
				else if (w==127)
 266:	8f 37       	cpi	r24, 0x7F	; 127
 268:	91 05       	cpc	r25, r1
 26a:	21 f4       	brne	.+8      	; 0x274 <main+0x19c>
				{
					
					PORTD&=~(1<<PIND4);
 26c:	94 98       	cbi	0x12, 4	; 18
					PORTD&=~(1<<PIND5);
 26e:	95 98       	cbi	0x12, 5	; 18
					PORTD&=~(1<<PIND6);
 270:	96 98       	cbi	0x12, 6	; 18
					PORTD&=~(1<<PIND7);
 272:	97 98       	cbi	0x12, 7	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 274:	ff ef       	ldi	r31, 0xFF	; 255
 276:	29 e6       	ldi	r18, 0x69	; 105
 278:	88 e1       	ldi	r24, 0x18	; 24
 27a:	f1 50       	subi	r31, 0x01	; 1
 27c:	20 40       	sbci	r18, 0x00	; 0
 27e:	80 40       	sbci	r24, 0x00	; 0
 280:	e1 f7       	brne	.-8      	; 0x27a <main+0x1a2>
 282:	00 c0       	rjmp	.+0      	; 0x284 <main+0x1ac>
 284:	00 00       	nop
 286:	35 cf       	rjmp	.-406    	; 0xf2 <main+0x1a>

00000288 <SPI_send>:
	volatile int ps2_init_i;
	for(ps2_init_i=0; ps2_init_i<10; ps2_init_i++)
	{
		PS2_POLLBUTTON[ps2_init_i] = ps2_init_array[ps2_init_i];
	}
}
 288:	8f b9       	out	0x0f, r24	; 15
 28a:	77 9b       	sbis	0x0e, 7	; 14
 28c:	fe cf       	rjmp	.-4      	; 0x28a <SPI_send+0x2>
 28e:	80 e5       	ldi	r24, 0x50	; 80
 290:	8a 95       	dec	r24
 292:	f1 f7       	brne	.-4      	; 0x290 <SPI_send+0x8>
 294:	8f b1       	in	r24, 0x0f	; 15
 296:	08 95       	ret

00000298 <SPI_send_array>:
 298:	cf 92       	push	r12
 29a:	df 92       	push	r13
 29c:	ef 92       	push	r14
 29e:	ff 92       	push	r15
 2a0:	0f 93       	push	r16
 2a2:	1f 93       	push	r17
 2a4:	cf 93       	push	r28
 2a6:	df 93       	push	r29
 2a8:	66 23       	and	r22, r22
 2aa:	89 f0       	breq	.+34     	; 0x2ce <SPI_send_array+0x36>
 2ac:	7c 01       	movw	r14, r24
 2ae:	6c 01       	movw	r12, r24
 2b0:	c6 0e       	add	r12, r22
 2b2:	d1 1c       	adc	r13, r1
 2b4:	ec 01       	movw	r28, r24
 2b6:	8e 01       	movw	r16, r28
 2b8:	0e 19       	sub	r16, r14
 2ba:	1f 09       	sbc	r17, r15
 2bc:	89 91       	ld	r24, Y+
 2be:	e4 df       	rcall	.-56     	; 0x288 <SPI_send>
 2c0:	f8 01       	movw	r30, r16
 2c2:	eb 5e       	subi	r30, 0xEB	; 235
 2c4:	fe 4f       	sbci	r31, 0xFE	; 254
 2c6:	80 83       	st	Z, r24
 2c8:	cc 15       	cp	r28, r12
 2ca:	dd 05       	cpc	r29, r13
 2cc:	a1 f7       	brne	.-24     	; 0x2b6 <SPI_send_array+0x1e>
 2ce:	df 91       	pop	r29
 2d0:	cf 91       	pop	r28
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	ff 90       	pop	r15
 2d8:	ef 90       	pop	r14
 2da:	df 90       	pop	r13
 2dc:	cf 90       	pop	r12
 2de:	08 95       	ret

000002e0 <scan_PS2>:

void scan_PS2()
{
//	    USART_TransmitString("before scan PS2");
//	    NewLine();
	SPI_PORT &= ~(_BV(SS_PIN));	//ATT held low	
 2e0:	c2 98       	cbi	0x18, 2	; 24
	//a=0;	
    //    b=0;
	//c=0;
	SPI_send_array(PS2_POLLBUTTON,9);
 2e2:	69 e0       	ldi	r22, 0x09	; 9
 2e4:	8c e0       	ldi	r24, 0x0C	; 12
 2e6:	91 e0       	ldi	r25, 0x01	; 1
 2e8:	d7 df       	rcall	.-82     	; 0x298 <SPI_send_array>
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
 2ea:	c2 9a       	sbi	0x18, 2	; 24
 2ec:	8f e9       	ldi	r24, 0x9F	; 159
 2ee:	9f e0       	ldi	r25, 0x0F	; 15
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <scan_PS2+0x10>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <scan_PS2+0x16>
 2f6:	00 00       	nop
 2f8:	08 95       	ret

000002fa <__fixsfsi>:
 2fa:	04 d0       	rcall	.+8      	; 0x304 <__fixunssfsi>
 2fc:	68 94       	set
 2fe:	b1 11       	cpse	r27, r1
 300:	8d c0       	rjmp	.+282    	; 0x41c <__fp_szero>
 302:	08 95       	ret

00000304 <__fixunssfsi>:
 304:	70 d0       	rcall	.+224    	; 0x3e6 <__fp_splitA>
 306:	88 f0       	brcs	.+34     	; 0x32a <__fixunssfsi+0x26>
 308:	9f 57       	subi	r25, 0x7F	; 127
 30a:	90 f0       	brcs	.+36     	; 0x330 <__fixunssfsi+0x2c>
 30c:	b9 2f       	mov	r27, r25
 30e:	99 27       	eor	r25, r25
 310:	b7 51       	subi	r27, 0x17	; 23
 312:	a0 f0       	brcs	.+40     	; 0x33c <__fixunssfsi+0x38>
 314:	d1 f0       	breq	.+52     	; 0x34a <__fixunssfsi+0x46>
 316:	66 0f       	add	r22, r22
 318:	77 1f       	adc	r23, r23
 31a:	88 1f       	adc	r24, r24
 31c:	99 1f       	adc	r25, r25
 31e:	1a f0       	brmi	.+6      	; 0x326 <__fixunssfsi+0x22>
 320:	ba 95       	dec	r27
 322:	c9 f7       	brne	.-14     	; 0x316 <__fixunssfsi+0x12>
 324:	12 c0       	rjmp	.+36     	; 0x34a <__fixunssfsi+0x46>
 326:	b1 30       	cpi	r27, 0x01	; 1
 328:	81 f0       	breq	.+32     	; 0x34a <__fixunssfsi+0x46>
 32a:	77 d0       	rcall	.+238    	; 0x41a <__fp_zero>
 32c:	b1 e0       	ldi	r27, 0x01	; 1
 32e:	08 95       	ret
 330:	74 c0       	rjmp	.+232    	; 0x41a <__fp_zero>
 332:	67 2f       	mov	r22, r23
 334:	78 2f       	mov	r23, r24
 336:	88 27       	eor	r24, r24
 338:	b8 5f       	subi	r27, 0xF8	; 248
 33a:	39 f0       	breq	.+14     	; 0x34a <__fixunssfsi+0x46>
 33c:	b9 3f       	cpi	r27, 0xF9	; 249
 33e:	cc f3       	brlt	.-14     	; 0x332 <__fixunssfsi+0x2e>
 340:	86 95       	lsr	r24
 342:	77 95       	ror	r23
 344:	67 95       	ror	r22
 346:	b3 95       	inc	r27
 348:	d9 f7       	brne	.-10     	; 0x340 <__fixunssfsi+0x3c>
 34a:	3e f4       	brtc	.+14     	; 0x35a <__fixunssfsi+0x56>
 34c:	90 95       	com	r25
 34e:	80 95       	com	r24
 350:	70 95       	com	r23
 352:	61 95       	neg	r22
 354:	7f 4f       	sbci	r23, 0xFF	; 255
 356:	8f 4f       	sbci	r24, 0xFF	; 255
 358:	9f 4f       	sbci	r25, 0xFF	; 255
 35a:	08 95       	ret

0000035c <__floatunsisf>:
 35c:	e8 94       	clt
 35e:	09 c0       	rjmp	.+18     	; 0x372 <__floatsisf+0x12>

00000360 <__floatsisf>:
 360:	97 fb       	bst	r25, 7
 362:	3e f4       	brtc	.+14     	; 0x372 <__floatsisf+0x12>
 364:	90 95       	com	r25
 366:	80 95       	com	r24
 368:	70 95       	com	r23
 36a:	61 95       	neg	r22
 36c:	7f 4f       	sbci	r23, 0xFF	; 255
 36e:	8f 4f       	sbci	r24, 0xFF	; 255
 370:	9f 4f       	sbci	r25, 0xFF	; 255
 372:	99 23       	and	r25, r25
 374:	a9 f0       	breq	.+42     	; 0x3a0 <__floatsisf+0x40>
 376:	f9 2f       	mov	r31, r25
 378:	96 e9       	ldi	r25, 0x96	; 150
 37a:	bb 27       	eor	r27, r27
 37c:	93 95       	inc	r25
 37e:	f6 95       	lsr	r31
 380:	87 95       	ror	r24
 382:	77 95       	ror	r23
 384:	67 95       	ror	r22
 386:	b7 95       	ror	r27
 388:	f1 11       	cpse	r31, r1
 38a:	f8 cf       	rjmp	.-16     	; 0x37c <__floatsisf+0x1c>
 38c:	fa f4       	brpl	.+62     	; 0x3cc <__floatsisf+0x6c>
 38e:	bb 0f       	add	r27, r27
 390:	11 f4       	brne	.+4      	; 0x396 <__floatsisf+0x36>
 392:	60 ff       	sbrs	r22, 0
 394:	1b c0       	rjmp	.+54     	; 0x3cc <__floatsisf+0x6c>
 396:	6f 5f       	subi	r22, 0xFF	; 255
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	8f 4f       	sbci	r24, 0xFF	; 255
 39c:	9f 4f       	sbci	r25, 0xFF	; 255
 39e:	16 c0       	rjmp	.+44     	; 0x3cc <__floatsisf+0x6c>
 3a0:	88 23       	and	r24, r24
 3a2:	11 f0       	breq	.+4      	; 0x3a8 <__floatsisf+0x48>
 3a4:	96 e9       	ldi	r25, 0x96	; 150
 3a6:	11 c0       	rjmp	.+34     	; 0x3ca <__floatsisf+0x6a>
 3a8:	77 23       	and	r23, r23
 3aa:	21 f0       	breq	.+8      	; 0x3b4 <__floatsisf+0x54>
 3ac:	9e e8       	ldi	r25, 0x8E	; 142
 3ae:	87 2f       	mov	r24, r23
 3b0:	76 2f       	mov	r23, r22
 3b2:	05 c0       	rjmp	.+10     	; 0x3be <__floatsisf+0x5e>
 3b4:	66 23       	and	r22, r22
 3b6:	71 f0       	breq	.+28     	; 0x3d4 <__floatsisf+0x74>
 3b8:	96 e8       	ldi	r25, 0x86	; 134
 3ba:	86 2f       	mov	r24, r22
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	2a f0       	brmi	.+10     	; 0x3cc <__floatsisf+0x6c>
 3c2:	9a 95       	dec	r25
 3c4:	66 0f       	add	r22, r22
 3c6:	77 1f       	adc	r23, r23
 3c8:	88 1f       	adc	r24, r24
 3ca:	da f7       	brpl	.-10     	; 0x3c2 <__floatsisf+0x62>
 3cc:	88 0f       	add	r24, r24
 3ce:	96 95       	lsr	r25
 3d0:	87 95       	ror	r24
 3d2:	97 f9       	bld	r25, 7
 3d4:	08 95       	ret

000003d6 <__fp_split3>:
 3d6:	57 fd       	sbrc	r21, 7
 3d8:	90 58       	subi	r25, 0x80	; 128
 3da:	44 0f       	add	r20, r20
 3dc:	55 1f       	adc	r21, r21
 3de:	59 f0       	breq	.+22     	; 0x3f6 <__fp_splitA+0x10>
 3e0:	5f 3f       	cpi	r21, 0xFF	; 255
 3e2:	71 f0       	breq	.+28     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e4:	47 95       	ror	r20

000003e6 <__fp_splitA>:
 3e6:	88 0f       	add	r24, r24
 3e8:	97 fb       	bst	r25, 7
 3ea:	99 1f       	adc	r25, r25
 3ec:	61 f0       	breq	.+24     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3ee:	9f 3f       	cpi	r25, 0xFF	; 255
 3f0:	79 f0       	breq	.+30     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f2:	87 95       	ror	r24
 3f4:	08 95       	ret
 3f6:	12 16       	cp	r1, r18
 3f8:	13 06       	cpc	r1, r19
 3fa:	14 06       	cpc	r1, r20
 3fc:	55 1f       	adc	r21, r21
 3fe:	f2 cf       	rjmp	.-28     	; 0x3e4 <__fp_split3+0xe>
 400:	46 95       	lsr	r20
 402:	f1 df       	rcall	.-30     	; 0x3e6 <__fp_splitA>
 404:	08 c0       	rjmp	.+16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 406:	16 16       	cp	r1, r22
 408:	17 06       	cpc	r1, r23
 40a:	18 06       	cpc	r1, r24
 40c:	99 1f       	adc	r25, r25
 40e:	f1 cf       	rjmp	.-30     	; 0x3f2 <__fp_splitA+0xc>
 410:	86 95       	lsr	r24
 412:	71 05       	cpc	r23, r1
 414:	61 05       	cpc	r22, r1
 416:	08 94       	sec
 418:	08 95       	ret

0000041a <__fp_zero>:
 41a:	e8 94       	clt

0000041c <__fp_szero>:
 41c:	bb 27       	eor	r27, r27
 41e:	66 27       	eor	r22, r22
 420:	77 27       	eor	r23, r23
 422:	cb 01       	movw	r24, r22
 424:	97 f9       	bld	r25, 7
 426:	08 95       	ret

00000428 <__mulsf3>:
 428:	0b d0       	rcall	.+22     	; 0x440 <__mulsf3x>
 42a:	cf c0       	rjmp	.+414    	; 0x5ca <__fp_round>
 42c:	c0 d0       	rcall	.+384    	; 0x5ae <__fp_pscA>
 42e:	28 f0       	brcs	.+10     	; 0x43a <__mulsf3+0x12>
 430:	c5 d0       	rcall	.+394    	; 0x5bc <__fp_pscB>
 432:	18 f0       	brcs	.+6      	; 0x43a <__mulsf3+0x12>
 434:	95 23       	and	r25, r21
 436:	09 f0       	breq	.+2      	; 0x43a <__mulsf3+0x12>
 438:	9c c0       	rjmp	.+312    	; 0x572 <__fp_inf>
 43a:	af c0       	rjmp	.+350    	; 0x59a <__fp_nan>
 43c:	11 24       	eor	r1, r1
 43e:	ee cf       	rjmp	.-36     	; 0x41c <__fp_szero>

00000440 <__mulsf3x>:
 440:	ca df       	rcall	.-108    	; 0x3d6 <__fp_split3>
 442:	a0 f3       	brcs	.-24     	; 0x42c <__mulsf3+0x4>

00000444 <__mulsf3_pse>:
 444:	95 9f       	mul	r25, r21
 446:	d1 f3       	breq	.-12     	; 0x43c <__mulsf3+0x14>
 448:	95 0f       	add	r25, r21
 44a:	50 e0       	ldi	r21, 0x00	; 0
 44c:	55 1f       	adc	r21, r21
 44e:	62 9f       	mul	r22, r18
 450:	f0 01       	movw	r30, r0
 452:	72 9f       	mul	r23, r18
 454:	bb 27       	eor	r27, r27
 456:	f0 0d       	add	r31, r0
 458:	b1 1d       	adc	r27, r1
 45a:	63 9f       	mul	r22, r19
 45c:	aa 27       	eor	r26, r26
 45e:	f0 0d       	add	r31, r0
 460:	b1 1d       	adc	r27, r1
 462:	aa 1f       	adc	r26, r26
 464:	64 9f       	mul	r22, r20
 466:	66 27       	eor	r22, r22
 468:	b0 0d       	add	r27, r0
 46a:	a1 1d       	adc	r26, r1
 46c:	66 1f       	adc	r22, r22
 46e:	82 9f       	mul	r24, r18
 470:	22 27       	eor	r18, r18
 472:	b0 0d       	add	r27, r0
 474:	a1 1d       	adc	r26, r1
 476:	62 1f       	adc	r22, r18
 478:	73 9f       	mul	r23, r19
 47a:	b0 0d       	add	r27, r0
 47c:	a1 1d       	adc	r26, r1
 47e:	62 1f       	adc	r22, r18
 480:	83 9f       	mul	r24, r19
 482:	a0 0d       	add	r26, r0
 484:	61 1d       	adc	r22, r1
 486:	22 1f       	adc	r18, r18
 488:	74 9f       	mul	r23, r20
 48a:	33 27       	eor	r19, r19
 48c:	a0 0d       	add	r26, r0
 48e:	61 1d       	adc	r22, r1
 490:	23 1f       	adc	r18, r19
 492:	84 9f       	mul	r24, r20
 494:	60 0d       	add	r22, r0
 496:	21 1d       	adc	r18, r1
 498:	82 2f       	mov	r24, r18
 49a:	76 2f       	mov	r23, r22
 49c:	6a 2f       	mov	r22, r26
 49e:	11 24       	eor	r1, r1
 4a0:	9f 57       	subi	r25, 0x7F	; 127
 4a2:	50 40       	sbci	r21, 0x00	; 0
 4a4:	8a f0       	brmi	.+34     	; 0x4c8 <__mulsf3_pse+0x84>
 4a6:	e1 f0       	breq	.+56     	; 0x4e0 <__mulsf3_pse+0x9c>
 4a8:	88 23       	and	r24, r24
 4aa:	4a f0       	brmi	.+18     	; 0x4be <__mulsf3_pse+0x7a>
 4ac:	ee 0f       	add	r30, r30
 4ae:	ff 1f       	adc	r31, r31
 4b0:	bb 1f       	adc	r27, r27
 4b2:	66 1f       	adc	r22, r22
 4b4:	77 1f       	adc	r23, r23
 4b6:	88 1f       	adc	r24, r24
 4b8:	91 50       	subi	r25, 0x01	; 1
 4ba:	50 40       	sbci	r21, 0x00	; 0
 4bc:	a9 f7       	brne	.-22     	; 0x4a8 <__mulsf3_pse+0x64>
 4be:	9e 3f       	cpi	r25, 0xFE	; 254
 4c0:	51 05       	cpc	r21, r1
 4c2:	70 f0       	brcs	.+28     	; 0x4e0 <__mulsf3_pse+0x9c>
 4c4:	56 c0       	rjmp	.+172    	; 0x572 <__fp_inf>
 4c6:	aa cf       	rjmp	.-172    	; 0x41c <__fp_szero>
 4c8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ca:	ec f3       	brlt	.-6      	; 0x4c6 <__mulsf3_pse+0x82>
 4cc:	98 3e       	cpi	r25, 0xE8	; 232
 4ce:	dc f3       	brlt	.-10     	; 0x4c6 <__mulsf3_pse+0x82>
 4d0:	86 95       	lsr	r24
 4d2:	77 95       	ror	r23
 4d4:	67 95       	ror	r22
 4d6:	b7 95       	ror	r27
 4d8:	f7 95       	ror	r31
 4da:	e7 95       	ror	r30
 4dc:	9f 5f       	subi	r25, 0xFF	; 255
 4de:	c1 f7       	brne	.-16     	; 0x4d0 <__mulsf3_pse+0x8c>
 4e0:	fe 2b       	or	r31, r30
 4e2:	88 0f       	add	r24, r24
 4e4:	91 1d       	adc	r25, r1
 4e6:	96 95       	lsr	r25
 4e8:	87 95       	ror	r24
 4ea:	97 f9       	bld	r25, 7
 4ec:	08 95       	ret
 4ee:	11 f4       	brne	.+4      	; 0x4f4 <__mulsf3_pse+0xb0>
 4f0:	0e f4       	brtc	.+2      	; 0x4f4 <__mulsf3_pse+0xb0>
 4f2:	53 c0       	rjmp	.+166    	; 0x59a <__fp_nan>
 4f4:	44 c0       	rjmp	.+136    	; 0x57e <__fp_mpack>

000004f6 <sqrt>:
 4f6:	77 df       	rcall	.-274    	; 0x3e6 <__fp_splitA>
 4f8:	d0 f3       	brcs	.-12     	; 0x4ee <__mulsf3_pse+0xaa>
 4fa:	99 23       	and	r25, r25
 4fc:	d9 f3       	breq	.-10     	; 0x4f4 <__mulsf3_pse+0xb0>
 4fe:	ce f3       	brts	.-14     	; 0x4f2 <__mulsf3_pse+0xae>
 500:	9f 57       	subi	r25, 0x7F	; 127
 502:	55 0b       	sbc	r21, r21
 504:	87 ff       	sbrs	r24, 7
 506:	4c d0       	rcall	.+152    	; 0x5a0 <__fp_norm2>
 508:	00 24       	eor	r0, r0
 50a:	a0 e6       	ldi	r26, 0x60	; 96
 50c:	40 ea       	ldi	r20, 0xA0	; 160
 50e:	90 01       	movw	r18, r0
 510:	80 58       	subi	r24, 0x80	; 128
 512:	56 95       	lsr	r21
 514:	97 95       	ror	r25
 516:	28 f4       	brcc	.+10     	; 0x522 <sqrt+0x2c>
 518:	80 5c       	subi	r24, 0xC0	; 192
 51a:	66 0f       	add	r22, r22
 51c:	77 1f       	adc	r23, r23
 51e:	88 1f       	adc	r24, r24
 520:	20 f0       	brcs	.+8      	; 0x52a <sqrt+0x34>
 522:	26 17       	cp	r18, r22
 524:	37 07       	cpc	r19, r23
 526:	48 07       	cpc	r20, r24
 528:	30 f4       	brcc	.+12     	; 0x536 <sqrt+0x40>
 52a:	62 1b       	sub	r22, r18
 52c:	73 0b       	sbc	r23, r19
 52e:	84 0b       	sbc	r24, r20
 530:	20 29       	or	r18, r0
 532:	31 29       	or	r19, r1
 534:	4a 2b       	or	r20, r26
 536:	a6 95       	lsr	r26
 538:	17 94       	ror	r1
 53a:	07 94       	ror	r0
 53c:	20 25       	eor	r18, r0
 53e:	31 25       	eor	r19, r1
 540:	4a 27       	eor	r20, r26
 542:	58 f7       	brcc	.-42     	; 0x51a <sqrt+0x24>
 544:	66 0f       	add	r22, r22
 546:	77 1f       	adc	r23, r23
 548:	88 1f       	adc	r24, r24
 54a:	20 f0       	brcs	.+8      	; 0x554 <sqrt+0x5e>
 54c:	26 17       	cp	r18, r22
 54e:	37 07       	cpc	r19, r23
 550:	48 07       	cpc	r20, r24
 552:	30 f4       	brcc	.+12     	; 0x560 <sqrt+0x6a>
 554:	62 0b       	sbc	r22, r18
 556:	73 0b       	sbc	r23, r19
 558:	84 0b       	sbc	r24, r20
 55a:	20 0d       	add	r18, r0
 55c:	31 1d       	adc	r19, r1
 55e:	41 1d       	adc	r20, r1
 560:	a0 95       	com	r26
 562:	81 f7       	brne	.-32     	; 0x544 <sqrt+0x4e>
 564:	b9 01       	movw	r22, r18
 566:	84 2f       	mov	r24, r20
 568:	91 58       	subi	r25, 0x81	; 129
 56a:	88 0f       	add	r24, r24
 56c:	96 95       	lsr	r25
 56e:	87 95       	ror	r24
 570:	08 95       	ret

00000572 <__fp_inf>:
 572:	97 f9       	bld	r25, 7
 574:	9f 67       	ori	r25, 0x7F	; 127
 576:	80 e8       	ldi	r24, 0x80	; 128
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	08 95       	ret

0000057e <__fp_mpack>:
 57e:	9f 3f       	cpi	r25, 0xFF	; 255
 580:	31 f0       	breq	.+12     	; 0x58e <__fp_mpack_finite+0xc>

00000582 <__fp_mpack_finite>:
 582:	91 50       	subi	r25, 0x01	; 1
 584:	20 f4       	brcc	.+8      	; 0x58e <__fp_mpack_finite+0xc>
 586:	87 95       	ror	r24
 588:	77 95       	ror	r23
 58a:	67 95       	ror	r22
 58c:	b7 95       	ror	r27
 58e:	88 0f       	add	r24, r24
 590:	91 1d       	adc	r25, r1
 592:	96 95       	lsr	r25
 594:	87 95       	ror	r24
 596:	97 f9       	bld	r25, 7
 598:	08 95       	ret

0000059a <__fp_nan>:
 59a:	9f ef       	ldi	r25, 0xFF	; 255
 59c:	80 ec       	ldi	r24, 0xC0	; 192
 59e:	08 95       	ret

000005a0 <__fp_norm2>:
 5a0:	91 50       	subi	r25, 0x01	; 1
 5a2:	50 40       	sbci	r21, 0x00	; 0
 5a4:	66 0f       	add	r22, r22
 5a6:	77 1f       	adc	r23, r23
 5a8:	88 1f       	adc	r24, r24
 5aa:	d2 f7       	brpl	.-12     	; 0x5a0 <__fp_norm2>
 5ac:	08 95       	ret

000005ae <__fp_pscA>:
 5ae:	00 24       	eor	r0, r0
 5b0:	0a 94       	dec	r0
 5b2:	16 16       	cp	r1, r22
 5b4:	17 06       	cpc	r1, r23
 5b6:	18 06       	cpc	r1, r24
 5b8:	09 06       	cpc	r0, r25
 5ba:	08 95       	ret

000005bc <__fp_pscB>:
 5bc:	00 24       	eor	r0, r0
 5be:	0a 94       	dec	r0
 5c0:	12 16       	cp	r1, r18
 5c2:	13 06       	cpc	r1, r19
 5c4:	14 06       	cpc	r1, r20
 5c6:	05 06       	cpc	r0, r21
 5c8:	08 95       	ret

000005ca <__fp_round>:
 5ca:	09 2e       	mov	r0, r25
 5cc:	03 94       	inc	r0
 5ce:	00 0c       	add	r0, r0
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__fp_round+0xc>
 5d2:	88 23       	and	r24, r24
 5d4:	52 f0       	brmi	.+20     	; 0x5ea <__fp_round+0x20>
 5d6:	bb 0f       	add	r27, r27
 5d8:	40 f4       	brcc	.+16     	; 0x5ea <__fp_round+0x20>
 5da:	bf 2b       	or	r27, r31
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <__fp_round+0x18>
 5de:	60 ff       	sbrs	r22, 0
 5e0:	04 c0       	rjmp	.+8      	; 0x5ea <__fp_round+0x20>
 5e2:	6f 5f       	subi	r22, 0xFF	; 255
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	08 95       	ret

000005ec <_exit>:
 5ec:	f8 94       	cli

000005ee <__stop_program>:
 5ee:	ff cf       	rjmp	.-2      	; 0x5ee <__stop_program>
